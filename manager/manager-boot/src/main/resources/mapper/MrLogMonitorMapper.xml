<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suixingpay.datas.manager.core.mapper.MrLogMonitorMapper">
    <!-- 通用查询映射结果
    <resultMap id="BaseResultMap" type="com.suixingpay.datas.manager.core.entity.MrLogMonitor">
        <result column="id" property="id" />
        <result column="node_id" property="nodeId" />
        <result column="job_id" property="jobId" />
        <result column="job_name" property="jobName" />
        <result column="ip_adress" property="ipAdress" />
        <result column="log_date" property="logDate" />
        <result column="log_title" property="logTitle" />
        <result column="log_content" property="logContent" />
        <result column="create_user_id" property="createUserId" />
        <result column="update_user_id" property="updateUserId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="state" property="state" />
        <result column="iscancel" property="iscancel" />
        <result column="partition_day" property="partitionDay" />
        <result column="remark" property="remark" />
    </resultMap>-->

    <!-- 通用查询结果列
    <sql id="Base_Column_List">
        select id, node_id AS nodeId, job_id AS jobId, job_name AS jobName, ip_adress AS ipAdress, log_date AS logDate, log_title AS logTitle, log_content AS logContent, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_log_monitor
    </sql>-->

    <!-- 新增 -->
    <insert id="insert">
        insert into mr_log_monitor(
        node_id,
        job_id,
        job_name,
        ip_adress,
        log_date,
        log_title,
        log_content,
        create_user_id,
        update_user_id,
        create_time,
        update_time,
        state,
        iscancel,
        partition_day,
        remark
        ) values (
        #{nodeId},
        #{jobId},
        #{jobName},
        #{ipAdress},
        #{logDate},
        #{logTitle},
        #{logContent},
        #{createUserId},
        #{updateUserId},
        #{createTime},
        #{updateTime},
        #{state},
        #{iscancel},
        #{partitionDay},
        #{remark}
        )
    </insert>

    <!-- 修改 -->
    <update id="update">
        update mr_log_monitor
        set
        node_id = #{mrLogMonitor.nodeId},
        job_id = #{mrLogMonitor.jobId},
        job_name = #{mrLogMonitor.jobName},
        ip_adress = #{mrLogMonitor.ipAdress},
        log_date = #{mrLogMonitor.logDate},
        log_title = #{mrLogMonitor.logTitle},
        log_content = #{mrLogMonitor.logContent},
        create_user_id = #{mrLogMonitor.createUserId},
        update_user_id = #{mrLogMonitor.updateUserId},
        create_time = #{mrLogMonitor.createTime},
        update_time = #{mrLogMonitor.updateTime},
        state = #{mrLogMonitor.state},
        iscancel = #{mrLogMonitor.iscancel},
        partition_day = #{mrLogMonitor.partitionDay},
        remark = #{mrLogMonitor.remark}
        where id = #{id}
    </update>

    <!-- 刪除 -->
    <delete id="delete">
        delete from mr_log_monitor where id = #{id}
    </delete>

    <!-- 根据主鍵查找 -->
    <select id="selectById" resultType="com.suixingpay.datas.manager.core.entity.MrLogMonitor">
        select id, node_id AS nodeId, job_id AS jobId, job_name AS jobName, ip_adress AS ipAdress, log_date AS logDate, log_title AS logTitle, log_content AS logContent, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_log_monitor
        where id = #{id}
    </select>

    <!-- 分页All -->
    <select id="pageAll" resultType="java.lang.Integer">
        select count(id) from mr_log_monitor
        where 1=1
    </select>

    <!-- 分页 -->
    <select id="page" resultType="com.suixingpay.datas.manager.core.entity.MrLogMonitor">
        select id, node_id AS nodeId, job_id AS jobId, job_name AS jobName, ip_adress AS ipAdress, log_date AS logDate, log_title AS logTitle, log_content AS logContent, create_user_id AS createUserId, update_user_id AS updateUserId, create_time AS createTime, update_time AS updateTime, state, iscancel, partition_day AS partitionDay, remark from mr_log_monitor
        where 1=1 limit #{page.offset},#{page.pageSize}
    </select>

    <!-- 验证新增 -->
    <insert id="insertSelective">
        insert into mr_log_monitor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="jobId != null">
                job_id,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="ipAdress != null">
                ip_adress,
            </if>
            <if test="logDate != null">
                log_date,
            </if>
            <if test="logTitle != null">
                log_title,
            </if>
            <if test="logContent != null">
                log_content,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="iscancel != null">
                iscancel,
            </if>
            <if test="partitionDay != null">
                partition_day,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nodeId != null">
                #{nodeId,jdbcType=VARCHAR},
            </if>
            <if test="jobId != null">
                #{jobId,jdbcType=BIGINT},
            </if>
            <if test="jobName != null">
                #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="ipAdress != null">
                #{ipAdress,jdbcType=VARCHAR},
            </if>
            <if test="logDate != null">
                #{logDate,jdbcType=TIMESTAMP},
            </if>
            <if test="logTitle != null">
                #{logTitle,jdbcType=VARCHAR},
            </if>
            <if test="logContent != null">
                #{logContent,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="iscancel != null">
                #{iscancel,jdbcType=INTEGER},
            </if>
            <if test="partitionDay != null">
                #{partitionDay,jdbcType=DATE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!-- 验证修改 -->
    <update id="updateSelective">
        update mr_log_monitor
        <set>
            <if test="mrLogMonitor.nodeId != null">
                node_id = #{mrLogMonitor.nodeId,jdbcType=VARCHAR},
            </if>
            <if test="mrLogMonitor.jobId != null">
                job_id = #{mrLogMonitor.jobId,jdbcType=BIGINT},
            </if>
            <if test="mrLogMonitor.jobName != null">
                job_name = #{mrLogMonitor.jobName,jdbcType=VARCHAR},
            </if>
            <if test="mrLogMonitor.ipAdress != null">
                ip_adress = #{mrLogMonitor.ipAdress,jdbcType=VARCHAR},
            </if>
            <if test="mrLogMonitor.logDate != null">
                log_date = #{mrLogMonitor.logDate,jdbcType=TIMESTAMP},
            </if>
            <if test="mrLogMonitor.logTitle != null">
                log_title = #{mrLogMonitor.logTitle,jdbcType=VARCHAR},
            </if>
            <if test="mrLogMonitor.logContent != null">
                log_content = #{mrLogMonitor.logContent,jdbcType=VARCHAR},
            </if>
            <if test="mrLogMonitor.createUserId != null">
                create_user_id = #{mrLogMonitor.createUserId,jdbcType=BIGINT},
            </if>
            <if test="mrLogMonitor.updateUserId != null">
                update_user_id = #{mrLogMonitor.updateUserId,jdbcType=BIGINT},
            </if>
            <if test="mrLogMonitor.createTime != null">
                create_time = #{mrLogMonitor.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrLogMonitor.updateTime != null">
                update_time = #{mrLogMonitor.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mrLogMonitor.state != null">
                state = #{mrLogMonitor.state,jdbcType=INTEGER},
            </if>
            <if test="mrLogMonitor.iscancel != null">
                iscancel = #{mrLogMonitor.iscancel,jdbcType=INTEGER},
            </if>
            <if test="mrLogMonitor.partitionDay != null">
                partition_day = #{mrLogMonitor.partitionDay,jdbcType=DATE},
            </if>
            <if test="mrLogMonitor.remark != null">
                remark = #{mrLogMonitor.remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>
